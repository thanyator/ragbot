name: "Embeddings processor"
pipeline:
  - name: "Read from S3"
    type: "s3-source"
    configuration:
      bucketName: "${secrets.s3.bucket-name}"
      endpoint: "${secrets.s3.endpoint}"
      access-key: "${secrets.s3.access-key}"
      secret-key: "${secrets.s3.secret}"
      region: "${secrets.s3.region}"
  - name: "Extract text"
    type: "text-extractor"
  - name: "Normalise text"
    type: "text-normaliser"
    configuration:
      make-lowercase: true
      trim-spaces: true
  - name: "Split into chunks"
    type: "text-splitter"
    configuration:
      splitter_type: "RecursiveCharacterTextSplitter"
      chunk_size: 4000
      separators: [ "\n\n", "\n", " ", "" ]
      keep_separator: false
      chunk_overlap: 2000
      length_function: "cl100k_base"
  - name: "Convert to structured data"
    type: "document-to-json"
    configuration:
      text-field: text
      copy-properties: true
  - name: "prepare-structure" # This step assumes that the filename for the doc follows a naming convention.
    type: "compute"
    configuration:
      fields:
        - name: "value.product_name"
          expression: "fn:split(value.name, ' ')[0]"
          type: STRING
        - name: "value.product_version"
          expression: "fn:split(value.name, ' ')[1]"
          type: STRING
        - name: "value.row_id"
          expression: "fn:concat3(value.filename, '_', value.chunk_id)"
          type: STRING
  - name: "compute-embeddings"
    id: "step1"
    type: "compute-ai-embeddings"
    configuration:
      model: "{{secrets.open-ai.embeddings-model}}" # This needs to match the name of the model deployment, not the base model
      embeddings-field: "value.embeddings"
      text: "{{ value.text }}}"
      batch-size: 10
      # this is in milliseconds. It is important to take this value into consideration when using this agent in the chat response pipeline
      # in fact this value impacts the latency of the response
      # for latency sensitive applications, consider to set batch-size to 1 or flush-interval to 0
      flush-interval: 500
  - name: "Write to Astra"
    type: "vector-db-sink"
    configuration:
      datasource: "AstraDatasource"
      table-name: "{{secrets.astra.table}}"
      keyspace: "{{secrets.astra.keyspace}}"
      mapping: "row_id=value.row_id, filename=value.name,chunk_text_length=value.chunk_text_length, chunk_num_tokens=value.chunk_num_tokens, chunk_id=value.chunk_id, body_blob=value.text, name=value.name, product_name=value.product_name, product_version=value.product_version, vector=value.embeddings"